{"version":3,"file":"readId.js","sourceRoot":"","sources":["../src/readId.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,SAAS,CAAC;AAEhC,MAAM,UAAU,MAAM,CAAC,KAAK;IAC1B,KAAK,CAAC,aAAa,CAAC;IACpB,IAAI,EAAE,GACJ,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;QAClE,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;QAClE,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;QAClE,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,CAAC;IAErE,OAAO,EAAE,CAAC;AACZ,CAAC","sourcesContent":["import { State } from \"./State\";\n\nexport function readId(state) {\n  state.readByteIndex;\n  var id =\n    String.fromCharCode(parseInt(state.Buffer[state.readByteIndex++])) +\n    String.fromCharCode(parseInt(state.Buffer[state.readByteIndex++])) +\n    String.fromCharCode(parseInt(state.Buffer[state.readByteIndex++])) +\n    String.fromCharCode(parseInt(state.Buffer[state.readByteIndex++]));\n\n  return id;\n}\n"]}