{"version":3,"file":"VoxData.js","sourceRoot":"","sources":["../src/VoxData.ts"],"names":[],"mappings":"","sourcesContent":["export type XYZ = {\n  x: number;\n  y: number;\n  z: number;\n};\nexport type XYZI = {\n  x: number;\n  y: number;\n  z: number;\n  i: number;\n};\n\nexport type TRN = {\n  node_id: number;\n  attributes: object;\n  child_id: number;\n  reserved_id: number;\n  number_of_frames: number;\n  frame_transforms: object[];\n};\n\nexport type GRP = {\n  id: number;\n  attributes: object;\n  num_of_children: number;\n  child_ids: number[];\n};\n\nexport type SHP = {\n  id: number;\n  attributes: object;\n  num_of_models: number;\n  models: { id: number; attributes: object }[];\n};\n\nexport type LAYR = {\n  id: number;\n  attributes: object;\n  reserved_id: number;\n};\n\n/** range: 0-255 */\nexport type RGBA = {\n  r: number;\n  g: number;\n  b: number;\n  a: number;\n};\n\n/** key is a number in string format */\nexport type MATL = {\n  id: number;\n  properties: Record<string, number>;\n};\n\n/** key is a number in string format */\nexport type OBJ = Record<string, number>;\n\n/** reverse engineered, this is NOT definitive :) */\nexport type VoxData = {\n  VOX: number;\n  SIZE: XYZ;\n  XYZI: XYZI[];\n  nTRN: TRN[];\n  nGRP: GRP[];\n  nSHP: SHP[];\n  LAYR: LAYR[];\n  RGBA: RGBA[];\n  MATL: MATL[];\n  rOBJ: OBJ[];\n};\n"]}