{"version":3,"file":"XYZI.js","sourceRoot":"","sources":["../../src/chunkHandlers/XYZI.js"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,WAAW,CAAC;AAEnC,MAAM,UAAU,WAAW,CAAC,KAAK,EAAE,UAAU,EAAE,QAAQ;IACrD,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;IACxE,KAAK,CAAC,aAAa,IAAI,CAAC,CAAC;IAEzB,MAAM,SAAS,GAAG,EAAE,CAAC;IACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC;QACnC,SAAS,CAAC,CAAC,CAAC,GAAG;YACb,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC,GAAG,IAAI;YAC7C,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC,GAAG,IAAI;YAC7C,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC,GAAG,IAAI;YAE7C,WAAW;YACX,yDAAyD;YACzD,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,qBAAqB;SAC3E,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,KAAK,CAAC,aAAa,KAAK,QAAQ,EAAE,+BAA+B,CAAC,CAAC;IAC1E,OAAO,SAAS,CAAC;AACnB,CAAC","sourcesContent":["import { assert } from \"../assert\";\n\nexport function XYZIHandler(state, startIndex, endIndex) {\n  var numVoxels = Math.abs(state.Buffer.readInt32LE(state.readByteIndex));\n  state.readByteIndex += 4;\n\n  const voxelData = [];\n  for (var n = 0; n < numVoxels; n++) {\n    voxelData[n] = {\n      x: state.Buffer[state.readByteIndex++] & 0xff,\n      y: state.Buffer[state.readByteIndex++] & 0xff,\n      z: state.Buffer[state.readByteIndex++] & 0xff,\n\n      // WTF?!??!\n      // NOTE color [0-254] are mapped to palette index [1-255]\n      i: (state.Buffer[state.readByteIndex++] & 0xff) - 1, //color index in RGBA\n    };\n  }\n\n  assert(state.readByteIndex === endIndex, \"XYZI chunk did not fully read\");\n  return voxelData;\n}\n"]}