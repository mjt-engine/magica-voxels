{"version":3,"file":"nGRP.js","sourceRoot":"","sources":["../../src/chunkHandlers/nGRP.js"],"names":[],"mappings":"AAAA,IAAI,QAAQ,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACtC,OAAO,EAAE,MAAM,EAAE,MAAM,WAAW,CAAC;AAEnC,MAAM,UAAU,WAAW,CAAC,KAAK,EAAE,UAAU,EAAE,QAAQ;IACrD,IAAI,GAAG,GAAG,EAAE,CAAC;IAEb,UAAU;IACV,GAAG,CAAC,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;IACvD,KAAK,CAAC,aAAa,IAAI,CAAC,CAAC;IAEzB,uBAAuB;IACvB,GAAG,CAAC,UAAU,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IAEjC,GAAG,CAAC,eAAe,GAAG,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;IACpE,KAAK,CAAC,aAAa,IAAI,CAAC,CAAC;IAEzB,GAAG,CAAC,SAAS,GAAG,EAAE,CAAC;IACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,eAAe,EAAE,CAAC,EAAE,EAAE,CAAC;QAC7C,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;QAClE,KAAK,CAAC,aAAa,IAAI,CAAC,CAAC;IAC3B,CAAC;IAED,MAAM,CACJ,KAAK,CAAC,aAAa,KAAK,QAAQ,EAChC,+BAA+B,KAAK,CAAC,aAAa,IAAI,QAAQ,EAAE,CACjE,CAAC;IACF,OAAO,GAAG,CAAC;AACb,CAAC","sourcesContent":["var readDict = require(\"../readDict\");\nimport { assert } from \"../assert\";\n\nexport function nGRPHandler(state, startIndex, endIndex) {\n  var ret = {};\n\n  // node id\n  ret.id = state.Buffer.readInt32LE(state.readByteIndex);\n  state.readByteIndex += 4;\n\n  // DICT node attributes\n  ret.attributes = readDict(state);\n\n  ret.num_of_children = state.Buffer.readInt32LE(state.readByteIndex);\n  state.readByteIndex += 4;\n\n  ret.child_ids = [];\n  for (var i = 0; i < ret.num_of_children; i++) {\n    ret.child_ids.push(state.Buffer.readInt32LE(state.readByteIndex));\n    state.readByteIndex += 4;\n  }\n\n  assert(\n    state.readByteIndex === endIndex,\n    `nGRP chunk length mismatch: ${state.readByteIndex} ${endIndex}`\n  );\n  return ret;\n}\n"]}